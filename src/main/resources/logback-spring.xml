<configuration>

    <springProperty name="SLACK_WEBHOOK_URI" source="logging.slack.webhook-uri"/>

    <conversionRule conversionWord="clr"
                    converterClass="org.springframework.boot.logging.logback.ColorConverter"/>

    <property name="LOG_PATTERN" value="[%clr(%d{yyyy-MM-dd HH:mm:ss.SSS, Asia/Seoul}){faint}] [%thread] %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(%logger{0}){cyan} - %msg%n" />
    <property name="SLACK_LOG_PATTERN" value="%clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(%logger{0}){cyan} - %msg%n" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="SLACK" class="com.github.maricn.logback.SlackAppender">
        <webhookUri>${SLACK_WEBHOOK_URI}</webhookUri>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${SLACK_LOG_PATTERN}</pattern>
        </layout>
        <username>BUDI-Notification</username>
        <iconEmoji>:stuck_out_tongue_winking_eye:</iconEmoji>
        <colorCoding>true</colorCoding>
    </appender>

    <appender name="ASYNC_SLACK" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SLACK"/>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <root level="warn">
        <springProfile name="local">
            <appender-ref ref="STDOUT" />
        </springProfile>

        <springProfile name="!local">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="ASYNC_SLACK"/>
        </springProfile>
    </root>
</configuration>